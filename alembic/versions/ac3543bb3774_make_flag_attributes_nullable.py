"""make flag attributes nullable

Revision ID: ac3543bb3774
Revises: 8564adac6373
Create Date: 2025-04-21 16:23:28.157690

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ac3543bb3774'
down_revision: Union[str, None] = '8564adac6373'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'articles',
        'status',
        existing_type=sa.VARCHAR(),
        type_=sa.Enum('PENDING', 'PUBLISHED', 'EXPIRED', 'ABANDONED', name='statusarticle'),
        postgresql_using="status::text::statusarticle",  # Conversion explicite
        existing_nullable=True
    )
    op.alter_column('signals', 'offender_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('signals', 'article_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('signals', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'articles',
        'status',
        existing_type=sa.Enum('PENDING', 'PUBLISHED', 'EXPIRED', 'ABANDONED', name='statusarticle'),
        type_=sa.VARCHAR(),
        postgresql_using="status::varchar",  # Conversion explicite
        existing_nullable=True
    )
    op.alter_column('signals', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('signals', 'article_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('signals', 'offender_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###